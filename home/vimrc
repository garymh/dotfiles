" ~/.vimrc
" thanks to the brilliant @tpope, @skwp, @nelstrom, @bling,
" @r00k, @spf13, @AndrewRadev, @junegunn, and @sjl for unknowingly
" allowing me to borrow from their dotfiles.

call plug#begin()
  let s:darwin = has('mac')

  " standard
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-unimpaired'

  " almost standard
  Plug 'mhinz/vim-sayonara'
  " Plug 'christoomey/vim-system-copy'
  Plug 'tpope/vim-surround'
  Plug 'junegunn/vim-oblique'
  Plug 'junegunn/vim-pseudocl'
  Plug 'milkypostman/vim-togglelist'
  Plug 'takac/vim-commandcaps'
  Plug 'tpope/vim-repeat'
  Plug 'tpope/vim-dispatch'

  " appearance
  Plug 'atimholt/spiffy_foldtext'
  Plug 'bling/vim-airline'
  Plug 'kien/rainbow_parentheses.vim'

  " Plug 'whatyouhide/vim-gotham'
  " Plug 'nanotech/jellybeans.vim'
  " Plug 'vim-scripts/wombat256.vim'
  Plug 'sjl/badwolf'

  " testing
  Plug 'kassio/neoterm'
  Plug 'janko-m/vim-test'
  Plug 'benmills/vimux'
  Plug 'christoomey/vim-tmux-runner'

  " completions
  source ~/.vim/scripts/completions.vim

  " ruby
  Plug 'ngmy/vim-rubocop',         { 'for': 'ruby' }
  Plug 'tpope/vim-bundler'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-rake',           { 'for': 'ruby' }
  Plug 'tpope/vim-rbenv'
  Plug 'vim-ruby/vim-ruby'
  Plug 'Chiel92/vim-autoformat'

  " tmux
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'tmux-plugins/vim-tmux'
  Plug 'tmux-plugins/vim-tmux-focus-events'

  " syntax
  Plug 'davejlong/cf-utils.vim',   { 'for': 'coldfusion' }
  Plug 'groenewege/vim-less',      { 'for': 'less' }
  Plug 'kchmck/vim-coffee-script', { 'for': 'coffee' }
  Plug 'mattn/emmet-vim',          { 'for': ['eruby','html'] }
  Plug 'slim-template/vim-slim'
  Plug 'tpope/vim-jdaddy',         { 'for': 'json' }
  Plug 'tpope/vim-markdown'

  " misc
  Plug 'AndrewRadev/sideways.vim'
  Plug 'AndrewRadev/splitjoin.vim'
  Plug 'AndrewRadev/switch.vim'
  Plug 'Wolfy87/vim-expand'
  Plug 'bruno-/vim-vertical-move'
  Plug 'duff/vim-scratch'
  Plug 'dyng/ctrlsf.vim'
  Plug 'junegunn/vim-easy-align',   { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
  Plug 'justinmk/vim-gtfo'
  Plug 'kristijanhusak/vim-multiple-cursors'
  Plug 'ntpeters/vim-better-whitespace'
  Plug 'scrooloose/nerdtree'
  Plug 'tpope/vim-abolish'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-dispatch'
  Plug 'tpope/vim-endwise'
  Plug 'tpope/vim-eunuch'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-git'
  " Plug 'tpope/vim-obsession'
  Plug 'tpope/vim-projectionist'
  Plug 'tpope/vim-rhubarb'
  Plug 'tpope/vim-rsi'
  Plug 'tpope/vim-speeddating'
  Plug 'vim-scripts/BufOnly.vim'
  Plug 'wincent/terminus'

  " custom vim objects
  " research wellle/targets.vim as a backup, if these start to fail
  Plug 'kana/vim-textobj-user'
  Plug 'kana/vim-textobj-entire'
  Plug 'kana/vim-textobj-indent'
  Plug 'b4winckler/vim-angry'
  Plug 'Julian/vim-textobj-brace'
  Plug 'beloglazov/vim-textobj-quotes'
  Plug 'nelstrom/vim-textobj-rubyblock'

  if s:darwin
    Plug 'rizzatti/dash.vim',      { 'on': ['Dash', '<Plug>DashSearch', '<Plug>DashGlobalSearch'] }
  endif

call plug#end()

set cmdheight=2          " hopefully prevents the 'hit enter' prompts
set foldlevelstart=20
set formatprg="par 79"   " respect the 80 character lines
set gdefault             " assume the /g flag on :s substitutions
set guicursor=a:blinkon0 " stop blinking
set hidden               " make unsaved buffers hidden
set hlsearch             " highlight searched phrases
set ignorecase
set modeline modelines=1 " check for syntax hints
set nojoinspaces         " use only 1 space after '.' when joining lines
set nowrap               " don't wrap
set noswapfile
set number
set shiftround           " indenting to nearest tabstop
set shortmess=WatAIT     " no interruptive prompts http://items.sjbach.com/319/configuring-vim-right
set showbreak=↪\         " show this character for breaks
set showmatch            " show matching brackets
set smartcase            " smartcase for searching
set splitbelow           " default split behavior
set splitright           " default split behavior
set virtualedit=onemore  " allow selection past last character

set nocursorline
set nocursorcolumn
set scrolljump=5
set lazyredraw
set synmaxcol=180

set wildignore+=.DS_Store
set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.gif,*.psd,*.o,*.obj,*.min.js
set wildignore+=*/bower_components/*,*/node_modules/*
set wildignore+=*/smarty/*,*/vendor/*,*/.git/*,*/.hg/*,*/.svn/*,*/.sass-cache/*,*/log/*,*/tmp/*,*/build/*,*/ckeditor/*,*/doc/*,*/source_maps/*,*/dist/*
set wildmode=list:longest

" let g:netrw_liststyle=1
set softtabstop=2 tabstop=2 shiftwidth=2 expandtab
set rtp+=/usr/local/Cellar/fzf/0.10.2

set fillchars=diff:⣿,vert:│

if s:darwin
  exe 'set t_kB=' . nr2char(27) . '[Z'
endif

if has('gui_macvim')
  colorscheme badwolf
else
  set t_Co=256
  colorscheme badwolf
endif

set textwidth=80
set colorcolumn=+1
hi ColorColumn guibg=#99AC6D ctermbg=246

" Persistent Undo {{{
silent !mkdir ~/.vim/backups > /dev/null 2>&1

if has("persistent_undo")
  set undodir=~/.vim/backups
  set undofile
endif
" }}}

source ~/.vim/scripts/autocommands.vim
source ~/.vim/scripts/mappings.vim
source ~/.vim/scripts/plugin_settings.vim
