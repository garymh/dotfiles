" vim:fdm=marker
" ~/.vimrc
" thanks to the brilliant @tpope, @skwp, @nelstrom, @bling, @mhinz
" @r00k, @spf13, @AndrewRadev, @junegunn, @wincent, and @sjl for unknowingly
" allowing me to borrow from their dotfiles.
let g:plug_shallow = 0
let g:plug_window  = 'enew'
let g:plug_pwindow = 'vertical rightbelow new'
call plug#begin()

" standard {{{ "
  Plug 'tpope/vim-unimpaired'
  Plug 'tpope/vim-surround'
  Plug 'EinfachToll/DidYouMean'
  Plug 'tpope/vim-sleuth'
" }}} standard "

" almost standard {{{ "
  Plug 'junegunn/fzf',            { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
  Plug 'junegunn/fzf.vim'
  Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
  Plug 'junegunn/vim-slash'
  Plug 'mhinz/vim-sayonara',      { 'on': 'Sayonara' }
  Plug 'takac/vim-commandcaps'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-ragtag'
  Plug 'tpope/vim-repeat'
" }}} almost standard "

" looks {{{ "
  Plug 'junegunn/goyo.vim',  { 'for': ['markdown', 'text'] }
  Plug 'junegunn/rainbow_parentheses.vim'
  Plug 'lilydjwg/colorizer', { 'for': ['css', 'sass', 'scss', 'less', 'html', 'tmux'] }
  Plug 'nathanaelkane/vim-indent-guides'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
" }}} looks "

" colors {{{ "
  Plug 'ayu-theme/ayu-vim'
  Plug 'cocopon/iceberg.vim'
  Plug 'drewtempelmeyer/palenight.vim'
  Plug 'fenetikm/falcon'
  Plug 'jacoborus/tender.vim'
  Plug 'nanotech/jellybeans.vim'
  Plug 'nightsense/cosmic_latte'
  Plug 'rakr/vim-one'
  Plug 'rakr/vim-two-firewatch'
" }}} colors "

" ruby {{{ "
  Plug 'benmills/vimux'
  Plug 'janko-m/vim-test'
  Plug 'ngmy/vim-rubocop',  { 'for': 'ruby' }
  Plug 'tpope/vim-bundler', { 'for': ['eruby', 'haml', 'ruby', 'slim'] }
  Plug 'tpope/vim-endwise', { 'for': ['ruby', 'bash', 'zsh', 'lua', 'sh', 'vim'] }
  Plug 'tpope/vim-rails',   { 'for': ['eruby', 'haml', 'ruby', 'slim', 'yaml'] }
  Plug 'tpope/vim-rake',    { 'for': 'ruby' }
" }}} ruby "

" syntax {{{ "
  Plug 'chrisbra/csv.vim',       { 'for': 'csv' }
  Plug 'csscomb/vim-csscomb'
  Plug 'davejlong/cf-utils.vim', { 'for': ['cfml', 'coldfusion'] }
  Plug 'ryanoasis/vim-devicons'
  Plug 'sheerun/vim-polyglot'
  Plug 'tpope/vim-apathy'
  Plug 'vim-ruby/vim-ruby'
" }}} syntax "

" misc {{{ "
  Plug 'AndrewRadev/sideways.vim'
  Plug 'AndrewRadev/splitjoin.vim'
  Plug 'AndrewRadev/switch.vim'
  Plug 'AndrewRadev/whitespaste.vim'
  Plug 'christoomey/vim-sort-motion'
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'duggiefresh/vim-easydir'
  Plug 'dyng/ctrlsf.vim',            { 'on': ['<Plug>CtrlSFPrompt' , 'CtrlSF', 'CtrlSFToggle'] }
  Plug 'foosoft/vim-argwrap',        { 'on': 'ArgWrap' }
  Plug 'justinmk/vim-gtfo'
  Plug 'kana/vim-niceblock'
  Plug 'ntpeters/vim-better-whitespace'
  Plug 'sickill/vim-pasta'
  Plug 'tpope/vim-abolish'
  Plug 'tpope/vim-eunuch'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-projectionist'
  Plug 'tpope/vim-rsi'
  Plug 'vim-scripts/BufOnly.vim',    { 'on': 'Bonly' }
  Plug 'wincent/terminus'
" }}} misc "

" the lab {{{ "
  Plug 'svermeulen/vim-subversive'
  Plug 'airblade/vim-gitgutter'
  " Plug 'tpope/vim-vinegar'
  Plug 'chrisbra/NrrwRgn'
  " Plug 'cohama/lexima.vim'
  " Plug 'dhruvasagar/vim-table-mode', { 'on': ['TableModeToggle'] }
  " Plug 'scrooloose/nerdtree'
  " Plug 'tpope/vim-rhubarb'
  Plug 'justinmk/vim-dirvish'
  Plug 'kristijanhusak/vim-dirvish-git'
  Plug 'fsharpasharp/vim-dirvinist'
" }}} the lab "

" mac/nvim {{{ "
  if has('nvim')
    Plug 'sbdchd/neoformat'

    if has('nvim-0.3.2')
      Plug 'meain/vim-package-info', { 'do': 'npm install' }
    endif

    " Plug 'machakann/vim-highlightedyank'
    let g:python3_host_prog = '/usr/local/bin/python3'
    let g:loaded_python_provider = 1
    set termguicolors
    set inccommand="split"
    if has('nvim-0.4')
      set wildoptions=pum
      set pumblend=15
      set signcolumn="yes:1"
    endif
  else
    if v:version > 800
      set termguicolors
      Plug 'sbdchd/neoformat'
      Plug 'machakann/vim-highlightedyank'
    endif

    Plug 'tpope/vim-sensible'
    set ttimeoutlen=50 " vim-sensible's is kinda slow
  endif

" }}} mac/nvim "

" custom vim objects {{{ "
  Plug 'kana/vim-textobj-user'
  Plug 'AndrewRadev/dsf.vim'
  Plug 'coderifous/textobj-word-column.vim'
  Plug 'Julian/vim-textobj-brace'
  Plug 'Julian/vim-textobj-variable-segment'
  Plug 'adriaanzon/vim-textobj-matchit'
  Plug 'beloglazov/vim-textobj-quotes'
  Plug 'glts/vim-textobj-indblock'
  Plug 'jceb/vim-textobj-uri'
  Plug 'kana/vim-textobj-entire'
  Plug 'kana/vim-textobj-indent'
  Plug 'kana/vim-textobj-line'
  Plug 'somini/vim-textobj-fold'
  Plug 'whatyouhide/vim-textobj-erb'
  Plug 'whatyouhide/vim-textobj-xmlattr'
  " Plug 'gilligan/textobj-gitgutter'

  " Completions
  if has('python3')
    source ~/.vim/scripts/completions.vim
  endif
" }}} custom vim objects "

call plug#end()

source ~/.vim/scripts/autocommands.vim
source ~/.vim/scripts/mappings.vim
source ~/.vim/scripts/plugin_settings.vim

if filereadable("~/.vimrc.local")
  source ~/.vimrc.local
endif

" settings {{{ "
  if v:version > 703 || v:version == 703 && has('patch541')
    set formatoptions+=j
  endif

  set formatoptions+=n      " smart auto-indenting inside numbered lists
  set formatoptions-=cro

  set autowrite             " Automatically write a file when leaving a modified buffer
  set expandtab
  set foldlevelstart=99
  set formatprg="par 79"    " respect the 80 character lines
  set hidden                " make unsaved buffers hidden
  set ignorecase
  set lazyredraw            " enables faster macros
  set list                  " show extra characters
  set listchars=nbsp:⦸,trail:•,tab:├─,precedes:«,extends:»
  set matchtime=5           " Show matching time
  set mouse=a
  set mousehide             " Hide the mouse cursor while typing
  set nojoinspaces          " don't autoinsert two spaces after '.', '?', '!' for join command
  set noshowmatch           " don't jump between matching brackets
  set nowrap
  set pumheight=20          " Avoid the pop up menu occupying the whole screen
  set report=0              " Always report changed lines
  set scrolljump=5          " Line to scroll when cursor leaves screen
  set scrolloff=3           " start scrolling 3 lines before edge of viewport
  set shiftround            " indenting to nearest tabstop
  set shiftwidth=2          " Use indents of 4 spaces
  set showmode              " Show current mode in command-line
  set smartcase             " smartcase for searching
  set softtabstop=2         " Let backspace delete indent
  set spelllang=en_us
  set spellcapcheck=        " smartcase for custom dictionary
  set splitbelow            " default split behavior
  set splitright            " default split behavior
  set synmaxcol=180         " does this make stuff faster?
  set t_Co=256              " Use 256 colors
  set tabstop=2             " An indentation every four columns
  set virtualedit=block     " allow selection in visual mode
  syntax sync minlines=256  " start highlighting from 256 lines backwards

  if has('linebreak')
    let &showbreak='⤷ '           " ARROW POINTING DOWNWARDS THEN CURVING RIGHTWARDS (U+2937, UTF-8: E2 A4 B7)
  endif
  if has('windows')
    set fillchars=vert:┃          " BOX DRAWINGS HEAVY VERTICAL (U+2503, UTF-8: E2 94 83)
  endif

  set whichwrap=b,h,l,s,<,>,[,],~ " allow <BS>/h/l/<Left>/<Right>/<Space>, ~ to cross line boundaries

  set shortmess+=A                " ignore annoying swapfile messages
  set shortmess+=I                " no splash screen
  set shortmess+=O                " file-read message overwrites previous
  set shortmess+=T                " truncate non-file messages in middle
  set shortmess+=o                " overwrite file-written messages
" }}} settings "

" wildignore {{{ "
  set wildignore+=.DS_Store
  set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.psd,*.min.js,*.sock
  set wildignore+=*/.git/*,*/log/*,*/tmp/*,.keep,.git/*,*/dotbot/*
  set wildmode=longest:full,full
" }}} wildignore "

" coloring {{{ "
  set background=dark

  try
    let g:falcon_inactive = 1
    let g:falcon_airline = 1
    let g:airline_theme = 'falcon'
    colorscheme falcon
  catch /:E185:/
    colorscheme default
  endtry

  highlight Comment gui=italic
" }}} coloring "

" @wincent smart undo/backup settings {{{
  if exists('$SUDO_USER')
    set nobackup                         " don't create root-owned files
    set nowritebackup                    " don't create root-owned files
    set noswapfile                       " don't create root-owned files
  else
    if !has('nvim')
      silent !mkdir ~/.vim/tmp/backup > /dev/null 2>&1
      silent !mkdir ~/.vim/tmp/swap > /dev/null 2>&1
      set backupdir=~/.vim/tmp/backup//    " keep backup files out of the way
      set directory=~/.vim/tmp/swap//      " keep swap files out of the way
    endif
  endif

  if has('persistent_undo')
    set undofile                       " actually use undo files
    if exists('$SUDO_USER')
      set noundofile                     " don't create root-owned files
    else
      if !has('nvim')
        silent !mkdir ~/.vim/tmp/undo > /dev/null 2>&1
        set undodir=~/.vim/tmp/undo//      " keep undo files out of the way
      endif
    endif
  endif

  if has('viminfo')
    if exists('$SUDO_USER')
      set viminfo=                       " don't create root-owned files
    else
      if isdirectory('~/local/.vim/tmp')
        set viminfo+=n~/local/.vim/tmp/viminfo
      else
        set viminfo+=n~/.vim/tmp/viminfo " override ~/.viminfo default
      endif

      if !empty(glob('~/.vim/tmp/viminfo'))
        if !filereadable(expand('~/.vim/tmp/viminfo'))
          echoerr 'warning: ~/.vim/tmp/viminfo exists but is not readable'
        endif
      endif
    endif
  endif
" }}}
