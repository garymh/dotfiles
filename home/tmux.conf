unbind C-b
set -g prefix C-space
set -g mouse on

set-window-option -g mode-keys vi
bind -Tcopy-mode-vi L send -X end-of-line
bind -Tcopy-mode-vi H send -X start-of-line
bind -Tcopy-mode-vi } send -X halfpage-down
bind -Tcopy-mode-vi { send -X halfpage-up
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi V send -X select-line
bind -Tcopy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection-and-cancel
bind -Tcopy-mode-vi Escape send -X cancel

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

bind-key x kill-pane

unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'
# bind p select-layout -o

# bind-key + break-pane
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# # resize current pane to 80 columns
bind 8 resize-pane -x 88
# bind 0 resize-pane -x 10

unbind S-Left
bind -n S-Left  previous-window
unbind S-Right
bind -n S-Right next-window

bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"
bind -r Tab last-window # cycle thru MRU tabs
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind-key o if-shell "$is_vim" "send-keys C-w W" "select-pane -t :.-"
# bind-key o if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind-key o if-shell "$is_vim" "send-keys C-w w" "select-pane -t :.-"
bind-key o if-shell "$is_vim" "select-pane -t :.-" "select-pane -t :.-"
# bind-key \; if-shell "$is_vim" "send-keys C-w w" "select-pane -t :.+"
# bind-key \; if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key \; if-shell "$is_vim" "send-keys C-w w" "select-pane -t :.+"
bind-key \; if-shell "$is_vim" "select-pane -t :.+" "select-pane -t :.+"

# bind-key \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi h select-pane -L
# bind-key -T copy-mode-vi j select-pane -D
# bind-key -T copy-mode-vi k select-pane -U
# bind-key -T copy-mode-vi l select-pane -R
# bind-key -T copy-mode-vi \ select-pane -l

source ~/.tmux/gary_theme.conf

set -g @batt_charged_icon "⚡"
set -g @batt_charging_icon "🔌"
set -g @batt_discharging_icon "🔋"
set -g @batt_attached_icon "⁉"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

if "test ! -d ~/.tmux/plugins/tpm" \
"run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run '~/.tmux/plugins/tpm/tpm'

set -w -g main-pane-width 85
set -g base-index 1
set -g pane-base-index 1
set -g set-titles on
set -w -g automatic-rename off
set-option -g default-command "tmux rename-window zsh; reattach-to-user-namespace -l zsh"

set -w -g wrap-search off
set -g set-titles-string "#T : #h > #S > #W"

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'
