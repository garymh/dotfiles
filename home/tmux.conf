unbind C-b
set -g prefix C-space
set -g mouse on
set -w -g main-pane-width 85
set -g base-index 1
set -g pane-base-index 1
set -g allow-rename on
set -g automatic-rename on
set -g set-titles on

set-window-option -g mode-keys vi
bind -Tcopy-mode-vi L send -X end-of-line
bind -Tcopy-mode-vi H send -X start-of-line
bind -Tcopy-mode-vi } send -X halfpage-down
bind -Tcopy-mode-vi { send -X halfpage-up
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi V send -X select-line
bind -Tcopy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection-and-cancel
bind -Tcopy-mode-vi Escape send -X cancel

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

bind-key x kill-pane

unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

bind 8 resize-pane -x 88

unbind S-Left
bind -n S-Left  previous-window
unbind S-Right
bind -n S-Right next-window

bind C-e new-window -n 'tmux.conf' "sh -c '\${VISUAL:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"
bind C-r source-file ~/.tmux/reset \; source-file ~/.tmux.conf \; display "Config reloaded"
bind -r Tab last-window # cycle thru MRU tabs
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key o if-shell "$is_vim" "select-pane -t :.-" "select-pane -t :.-"
bind-key \; if-shell "$is_vim" "select-pane -t :.+" "select-pane -t :.+"

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

FOREGROUND="#2B60A7"
FOREGROUND_LIGHT="#7D96D1"
DARKEST="#2C2C31"
DARKER="#494A52"
BACKGROUND="#404049"
FOREGROUND_LIGHT_TEXT="#000000"
ACTIVE_FOREGROUND_LIGHT_TEXT="#ffffff"
LIGHT="#57575e"
LIGHTER="#787882"
LIGHTEST="#9A9BA6"
FIRST_GRADIENT="#4d6691"
SECOND_GRADIENT="#6582b9"
THIRD_GRADIENT="#7698d6"

set -g status-bg "$BACKGROUND"
set -g status-fg "$FOREGROUND"

GRADIENT_UP="#[bg=$BACKGROUND] #[bg=$DARKER] #[bg=$DARKEST,fg=$ACTIVE_FOREGROUND_LIGHT_TEXT]"
GRADIENT_DOWN="#[bg=$DARKEST] #[bg=$DARKER] #[bg=$BACKGROUND]"
STATUS_GRADIENT_UP="#[bg=$LIGHT,fg=$FOREGROUND_LIGHT_TEXT]"
STATUS_GRADIENT_MID="#[bg=$LIGHTER] #[bg=$LIGHTEST,fg=$FOREGROUND_LIGHT_TEXT]"
STATUS_GRADIENT_DOWN="#[bg=$LIGHTER]"
ACTIVE_STATUS_GRADIENT_UP="#[bg=$FIRST_GRADIENT,fg=$ACTIVE_FOREGROUND_LIGHT_TEXT]"
ACTIVE_STATUS_GRADIENT_MID="#[bg=$SECOND_GRADIENT] #[bg=$THIRD_GRADIENT,fg=$ACTIVE_FOREGROUND_LIGHT_TEXT]"
ACTIVE_STATUS_GRADIENT_DOWN="#[bg=$FIRST_GRADIENT]"

set -g status-interval 60
set -g status-right-length 50
set -g status-justify left
set -g status-position top

set -g status-left "#[bg=$FOREGROUND] $GRADIENT_UP âŒ˜ $GRADIENT_DOWN "
set -g status-right "#{prefix_highlight} #(vpn_active) $GRADIENT_UP #{battery_icon}#{battery_status_fg}#{battery_percentage}$GRADIENT_DOWN$GRADIENT_UP#(date '+ %l:%M') $GRADIENT_DOWN #[bg=$FOREGROUND] "

set -w -g window-status-current-bg blue
set-window-option -g window-status-format "$STATUS_GRADIENT_UP #I $STATUS_GRADIENT_MID#{?#W, #W, #{pane_current_command}} $STATUS_GRADIENT_DOWN "
set-window-option -g window-status-current-format "$ACTIVE_STATUS_GRADIENT_UP #I $ACTIVE_STATUS_GRADIENT_MID#{?#W, #W, #{pane_current_command}} $ACTIVE_STATUS_GRADIENT_DOWN "

set -g @1password-subdomain 'holtzes'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'yardnsm/tmux-1password'

if "test ! -d ~/.tmux/plugins/tpm" \
"run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run '~/.tmux/plugins/tpm/tpm'
